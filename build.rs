extern crate phf_codegen;

use std::env;
use std::fs::File;
use std::io::{BufWriter, Write};
use std::path::Path;

fn main() {
    let path = Path::new(&env::var("OUT_DIR").unwrap()).join("codegen.rs");
    let mut file = BufWriter::new(File::create(&path).unwrap());

    let mut set = phf_codegen::Set::new();
        set.entry("i");
        set.entry("me");
        set.entry("my");
        set.entry("myself");
        set.entry("we");
        set.entry("our");
        set.entry("ours");
        set.entry("ourselves");
        set.entry("you");
        set.entry("your");
        set.entry("yours");
        set.entry("yourself");
        set.entry("yourselves");
        set.entry("he");
        set.entry("him");
        set.entry("his");
        set.entry("himself");
        set.entry("she");
        set.entry("her");
        set.entry("hers");
        set.entry("herself");
        set.entry("it");
        set.entry("its");
        set.entry("itself");
        set.entry("they");
        set.entry("them");
        set.entry("their");
        set.entry("theirs");
        set.entry("themselves");
        set.entry("what");
        set.entry("which");
        set.entry("who");
        set.entry("whom");
        set.entry("this");
        set.entry("that");
        set.entry("these");
        set.entry("those");
        set.entry("am");
        set.entry("is");
        set.entry("are");
        set.entry("was");
        set.entry("were");
        set.entry("be");
        set.entry("been");
        set.entry("being");
        set.entry("have");
        set.entry("has");
        set.entry("had");
        set.entry("having");
        set.entry("do");
        set.entry("does");
        set.entry("did");
        set.entry("doing");
        set.entry("a");
        set.entry("an");
        set.entry("the");
        set.entry("and");
        set.entry("but");
        set.entry("if");
        set.entry("or");
        set.entry("because");
        set.entry("as");
        set.entry("until");
        set.entry("while");
        set.entry("of");
        set.entry("at");
        set.entry("by");
        set.entry("for");
        set.entry("with");
        set.entry("about");
        set.entry("against");
        set.entry("between");
        set.entry("into");
        set.entry("through");
        set.entry("during");
        set.entry("before");
        set.entry("after");
        set.entry("above");
        set.entry("below");
        set.entry("to");
        set.entry("from");
        set.entry("up");
        set.entry("down");
        set.entry("in");
        set.entry("out");
        set.entry("on");
        set.entry("off");
        set.entry("over");
        set.entry("under");
        set.entry("again");
        set.entry("further");
        set.entry("then");
        set.entry("once");
        set.entry("here");
        set.entry("there");
        set.entry("when");
        set.entry("where");
        set.entry("why");
        set.entry("how");
        set.entry("all");
        set.entry("any");
        set.entry("both");
        set.entry("each");
        set.entry("few");
        set.entry("more");
        set.entry("most");
        set.entry("other");
        set.entry("some");
        set.entry("such");
        set.entry("no");
        set.entry("nor");
        set.entry("not");
        set.entry("only");
        set.entry("own");
        set.entry("same");
        set.entry("so");
        set.entry("than");
        set.entry("too");
        set.entry("very");
        set.entry("s");
        set.entry("t");
        set.entry("can");
        set.entry("will");
        set.entry("just");
        set.entry("don");
        set.entry("should");
        set.entry("now");

    write!(&mut file, "static KEYWORDS: phf::Set<&'static str> = \n{}", set.build()).unwrap();
    write!(&mut file, ";\n").unwrap();
}